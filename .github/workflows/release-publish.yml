name: Release Publish

on:
  release:
    types: [published]

jobs:
  build_linux:
    name: Build Linux Artifact
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
      - name: Install agent dependencies
        working-directory: ./packages/grabber
        run: npm ci
      - name: Run Linux build
        run: bash ./grabber_build.sh linux x64
      - name: Create tar archive for Linux build
        working-directory: ./packages/grabber/build/
        run: tar -czvf ../webrtc_grabber_agent_linux_x64.tar.gz .
      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: packages/grabber/webrtc_grabber_agent_linux_x64.tar.gz

  build_windows:
    name: Build Windows Artifact
    runs-on: windows-2019
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
      - name: Install agent dependencies
        working-directory: .\packages\grabber
        run: npm ci
      - name: Run Windows build
        working-directory: .
        shell: cmd
        run: |
          grabber_build_win64.bat
      - name: Archive Windows build
        run: powershell Compress-Archive -Path .\packages\grabber\build\* -DestinationPath .\packages\grabber\webrtc_grabber_agent_win_x64.zip
      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: packages/grabber/webrtc_grabber_agent_win_x64.zip

  upload_assets:
    name: Upload Assets to Release
    needs: [build_linux, build_windows]
    # This job runs for both triggers, but uses different release info based on trigger type
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux Artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: ./release-assets/
      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: ./release-assets/

      - name: Upload Linux Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./release-assets/webrtc_grabber_agent_linux_x64.tar.gz
          asset_name: webrtc_grabber_agent_linux_x64.tar.gz
          asset_content_type: application/gzip

      - name: Upload Windows Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./release-assets/webrtc_grabber_agent_win_x64.zip
          asset_name: webrtc_grabber_agent_win_x64.zip
          asset_content_type: application/zip
